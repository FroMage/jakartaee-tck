<!--

    Copyright (c) 2018, 2020 Oracle and/or its affiliates. All rights reserved.

    This program and the accompanying materials are made available under the
    terms of the Eclipse Public License v. 2.0, which is available at
    http://www.eclipse.org/legal/epl-2.0.

    This Source Code may also be made available under the following Secondary
    Licenses when the conditions for such availability set forth in the
    Eclipse Public License v. 2.0 are satisfied: GNU General Public License,
    version 2 with the GNU Classpath Exception, which is available at
    https://www.gnu.org/software/classpath/license.html.

    SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0

-->

		<!-- Chapter 11 HTTP Binding -->
                <!-- next available id is 11011 -->
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>JAXWS:SPEC:11000</id>
			<description>
Conformance (XML/HTTP Binding Support): An implementation MUST support the XML/HTTP binding.
			</description>
			<location chapter = "11" section = "1"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "false">
			<id>JAXWS:SPEC:11001</id>
			<description>
Conformance (Incompatible handlers): An implementation MUST throw WebServiceException when, at the time a binding provider is created, the handler chain returned by the configured HandlerResolver contains an incompatible handler.
			</description>
			<location chapter = "11" section = "1.1.1"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "false">
			<id>JAXWS:SPEC:11002</id>
			<description>Conformance Requirement (Incompatible handlers): Implementations MUST throw a WebServiceException when attempting to configure an incompatible handler using Binding.setHandlerChain.</description>
			<location chapter = "11" section = "1.1.1"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>JAXWS:SPEC:11003</id>
			<description>Conformance Requirement (Logical handler access): An implementation MUST allow access to the entire XML message via a logical message context.</description>
			<location chapter = "11" section = "1.1.1"/>
		</assertion>

		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>JAXWS:SPEC:11004</id>
			<description>A binding is responsible for catching runtime exceptions thrown by handlers and following the processing model described in section 9.3.2. A binding is responsible for converting the exception to a fault message subject to further handler processing if the following criteria are met: 1. A handler throws a ProtocolException from handleMessage, handleRequest or handleResponse 2. The MEP in use includes a response to the message being processed 3. The current message is not already a fault message (the handler might have undertaken the work prior to throwing the exception). If the above criteria are met then the exception is converted to a HTTP response message as follows: If the exception is an instance of HTTPException then the HTTP response code is set according to the value of the statusCode property. The current XML message content is removed. If the exception is of any other type then the HTTP status code is set to 500 to reflect a server class of error and any current XML message content is removed. "Handler processing is resumed as described in section 9.3.2. If the criteria for converting the exception to a fault message subject to further handler processing are not met then the exception is handled as follows depending on the current message direction: Outbound: The HTTP status code is set to 500 to reflect a server class of error, any current XML message content is removed and the message is dispatched. Inbound: The exception is passed to the binding provider.</description>
			<location chapter = "11" section = "2.1.1"/>
		</assertion>

		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>JAXWS:SPEC:11005</id>
			<description>Conformance Requirement (One-way operations): When invoking one-way operations, an implementation of the XML/HTTP binding MUST block until the HTTP response is received or an error occurs.</description>
			<location chapter = "11" section = "3.1"/>
		</assertion>

		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>JAXWS:SPEC:11006</id>
			<description>
Conformance (HTTP basic authentication support): An implementation of the XML/HTTP binding MUST support HTTP basic authentication.
			</description>
			<location chapter = "11" section = "3.2"/>
		</assertion>
		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>JAXWS:SPEC:11007</id>
			<description>
Conformance (Authentication properties): A client side implementation MUST support use of the the standard properties jakarta.xml.ws.security.auth.usernameand jakarta.xml.ws.security.auth.password to configure HTTP basic authentication.
			</description>
			<location chapter = "11" section = "3.2"/>
		</assertion>

		<assertion required = "true" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>JAXWS:SPEC:11008</id>
			<description>Conformance Requirement (URL rewriting support): An implementation MUST support use of HTTP URL rewriting for state management.</description>
			<location chapter = "11" section = "3.3"/>
		</assertion>
		<assertion required = "false" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>JAXWS:SPEC:11009</id>
			<description>Conformance Requirement (Cookie support): An implementation SHOULD support use of HTTP cookies for state management.</description>
			<location chapter = "11" section = "3.3"/>
		</assertion>
		<assertion required = "false" impl-spec = "false" defined-by = "technology" status = "active" testable = "true">
			<id>JAXWS:SPEC:11010</id>
			<description>Conformance Requirement (SSL session support): An implementation MAY support use of SSL session based state management.</description>
			<location chapter = "11" section = "3.3"/>
		</assertion>
